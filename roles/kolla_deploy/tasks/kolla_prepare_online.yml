---
#######################################
# copy python packages
#######################################
#- name: tar python packages
#  unarchive:
#    src: dist-packages.tar.gz
#    dest: /usr/local/lib/python2.7/dist-packages
#  tags:
#    - archive

#######################################
# LOCAL SOURCE && INSTALL PIP
#######################################
- name: update neunn_local_release
  copy: src=local.list dest=/etc/apt/sources.list

- name: update resolv.conf
  shell: echo 'nameserver {{ dns_ip }}' > /etc/resolv.conf

- name: update apt-cache1
  apt: update_cache=yes

- name: update apt-cache2
  shell: apt-get update

- name: install python-pip package
  apt: name={{ item }} state=present force=yes
  with_items:
    - python-pip

- name: shutdown ufw
  shell: ufw disable

- name: mkdir /root/.pip
  file: path=/root/.pip state=directory

- name: update pip.conf
  template: src=pip.conf dest=/root/.pip/pip.conf

- name: update pip
  shell: pip install -U pip==9.0.1

#######################
#remove apparmor
#######################
#- name: apparmor install?
#  shell: dpkg -s apparmor
#  register: apparmor_installed
#  failed_when: false
#
#- name: purge apparmor
#  apt: name=apparmor state=absent purge=yes


###########################
# INSTALL PACKAGES
##########################
- name: install dependent packages
  apt: name={{ item }} state=present force=yes
  with_items:
    - python-dev
    - libffi-dev
    - gcc
    - libssl-dev
    - git
    - apt-transport-https
    - ca-certificates
    - gdisk
    - openjdk-8-jdk
  tags:
    - jdk

- name: install keyserver
  shell: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

- name: install linux-image-extra
  shell: sudo apt-get install linux-image-extra-$(uname -r)
  tags:
    - package

- name: copy docker-key
  copy: src=docker-key dest=/tmp

- name:  add docker-key
  shell: sudo apt-key add /tmp/docker-key

- name: add-apt-repository
  shell: sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

- name: update source
  shell: sudo apt-get update

- name: pip install docker-py
  pip:
    name: docker-py
    version: 1.10.6
  tags:
    - docker-py

- name: pip install packages
  pip:
    name: "{{ item }}"
  with_items:
    - ansible
  #  - kolla
    - netifaces
    - IPy
  tags:
    - docker-py

#########################
#INSTALL DOCKER
#########################
- name: install docker-ce
  apt: name=docker-ce state=present force=yes
  tags:
    - docker-engine

- name: mkdir docker.service.d
  file: path=/etc/systemd/system/docker.service.d recurse=yes state=directory
  tags:
    - docker-engine

- name: copy kolla.conf
  template: src=kolla.conf dest=/etc/systemd/system/docker.service.d/kolla.conf
  tags:
    - docker-engine

- name: restart docker service
  service: name=docker state=restarted
  tags:
    - docker-engine

- name: Set mountinfo flag for neutron
  shell: mount --make-shared /run
  tags:
    - docker-engine

- name: registry image department
  lineinfile:
    dest: /lib/systemd/system/docker.service
    regexp: ^ExecStart=/usr/bin/dockerd -H fd://
    line: 'ExecStart=/usr/bin/dockerd -H fd:// --insecure-registry {{ harbor_ip }}'
  tags:
    - registry


#- name: docker-ce以前版本需要这么注册镜像仓库
#  shell: echo 'DOCKER_OPTS="--insecure-registry {{ harbor_ip }}"' >> /etc/default/docker


- name: restart docker service
  systemd:
    name: docker
    daemon_reload: yes
    state: restarted
  tags:
    - registry

